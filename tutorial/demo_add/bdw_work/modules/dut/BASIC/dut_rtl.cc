// Generated by stratus_hls 17.20-p100  (88533.190925)
// Fri Nov 20 12:05:36 2020
// from dut.cc
#include "dut_rtl.h"

struct dut;
dut::dut(sc_module_name name) : sc_module(name) 
    ,clk("clk")
    ,rst("rst")
    ,din_1_busy("din_1_busy")
    ,din_1_vld("din_1_vld")
    ,din_1_data("din_1_data")
    ,din_2_busy("din_2_busy")
    ,din_2_vld("din_2_vld")
    ,din_2_data("din_2_data")
    ,dout_busy("dout_busy")
    ,dout_vld("dout_vld")
    ,dout_data("dout_data")
    ,dout_m_req_m_prev_trig_req("dout_m_req_m_prev_trig_req")
    ,dut_Xor_1Ux1U_1U_4_17_out1("dut_Xor_1Ux1U_1U_4_17_out1")
    ,dout_m_unacked_req("dout_m_unacked_req")
    ,dut_Or_1Ux1U_1U_4_18_out1("dut_Or_1Ux1U_1U_4_18_out1")
    ,dut_N_Muxb_1_2_0_4_2_out1("dut_N_Muxb_1_2_0_4_2_out1")
    ,dut_And_1Ux1U_1U_4_13_out1("dut_And_1Ux1U_1U_4_13_out1")
    ,dut_Not_1U_1U_4_12_out1("dut_Not_1U_1U_4_12_out1")
    ,dut_Or_1Ux1U_1U_4_10_out1("dut_Or_1Ux1U_1U_4_10_out1")
    ,din_2_m_unvalidated_req("din_2_m_unvalidated_req")
    ,dut_And_1Ux1U_1U_4_11_out1("dut_And_1Ux1U_1U_4_11_out1")
    ,dut_N_Muxb_1_2_0_4_1_out1("dut_N_Muxb_1_2_0_4_1_out1")
    ,dut_And_1Ux1U_1U_4_6_out1("dut_And_1Ux1U_1U_4_6_out1")
    ,dut_Not_1U_1U_4_5_out1("dut_Not_1U_1U_4_5_out1")
    ,dut_Or_1Ux1U_1U_4_3_out1("dut_Or_1Ux1U_1U_4_3_out1")
    ,din_1_m_unvalidated_req("din_1_m_unvalidated_req")
    ,dut_And_1Ux1U_1U_4_4_out1("dut_And_1Ux1U_1U_4_4_out1")
    ,global_state_next("global_state_next")
    ,dut_Not_1U_1U_4_7_out1("dut_Not_1U_1U_4_7_out1")
    ,dut_Not_1U_1U_4_14_out1("dut_Not_1U_1U_4_14_out1")
    ,dut_And_1Ux1U_1U_4_19_out1("dut_And_1Ux1U_1U_4_19_out1")
    ,dut_Not_1U_1U_4_20_out1("dut_Not_1U_1U_4_20_out1")
    ,dout_m_req_m_trig_req("dout_m_req_m_trig_req")
    ,din_2_m_busy_req_0("din_2_m_busy_req_0")
    ,din_1_m_busy_req_0("din_1_m_busy_req_0")
    ,dut_Add_8Ux8U_9U_4_22_out1("dut_Add_8Ux8U_9U_4_22_out1")
    ,global_state("global_state")
    ,stall0("stall0")
{
  SC_METHOD(drive_dout_data);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_din_1_m_busy_req_0);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_din_2_m_busy_req_0);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_dout_m_req_m_trig_req);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_stall0);
  sensitive << ( global_state );
  sensitive << ( dut_Not_1U_1U_4_7_out1 );
  sensitive << ( dut_Not_1U_1U_4_14_out1 );
  sensitive << ( dut_And_1Ux1U_1U_4_19_out1 );

  SC_METHOD(dut_Add_8Ux8U_9U_4_22);
  sensitive << ( din_2_data );
  sensitive << ( dout_data );

  SC_METHOD(drive_global_state);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_global_state_next);
  sensitive << ( global_state );

  SC_METHOD(drive_din_1_busy);
  sensitive << ( dut_And_1Ux1U_1U_4_4_out1 );

  SC_METHOD(dut_Or_1Ux1U_1U_4_3);
  sensitive << ( din_1_vld );
  sensitive << ( din_1_m_unvalidated_req );

  SC_METHOD(dut_And_1Ux1U_1U_4_4);
  sensitive << ( din_1_m_busy_req_0 );
  sensitive << ( dut_Or_1Ux1U_1U_4_3_out1 );

  SC_METHOD(dut_Not_1U_1U_4_5);
  sensitive << ( dut_And_1Ux1U_1U_4_4_out1 );

  SC_METHOD(dut_And_1Ux1U_1U_4_6);
  sensitive << ( din_1_vld );
  sensitive << ( dut_Not_1U_1U_4_5_out1 );

  SC_METHOD(dut_Not_1U_1U_4_7);
  sensitive << ( dut_And_1Ux1U_1U_4_6_out1 );

  SC_METHOD(drive_din_1_m_unvalidated_req);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(dut_N_Muxb_1_2_0_4_1);
  sensitive << ( din_1_m_busy_req_0 );
  sensitive << ( din_1_m_unvalidated_req );
  sensitive << ( din_1_vld );

  SC_METHOD(drive_din_2_busy);
  sensitive << ( dut_And_1Ux1U_1U_4_11_out1 );

  SC_METHOD(dut_Or_1Ux1U_1U_4_10);
  sensitive << ( din_2_vld );
  sensitive << ( din_2_m_unvalidated_req );

  SC_METHOD(dut_And_1Ux1U_1U_4_11);
  sensitive << ( din_2_m_busy_req_0 );
  sensitive << ( dut_Or_1Ux1U_1U_4_10_out1 );

  SC_METHOD(dut_Not_1U_1U_4_12);
  sensitive << ( dut_And_1Ux1U_1U_4_11_out1 );

  SC_METHOD(dut_And_1Ux1U_1U_4_13);
  sensitive << ( din_2_vld );
  sensitive << ( dut_Not_1U_1U_4_12_out1 );

  SC_METHOD(dut_Not_1U_1U_4_14);
  sensitive << ( dut_And_1Ux1U_1U_4_13_out1 );

  SC_METHOD(drive_din_2_m_unvalidated_req);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(dut_N_Muxb_1_2_0_4_2);
  sensitive << ( din_2_m_busy_req_0 );
  sensitive << ( din_2_m_unvalidated_req );
  sensitive << ( din_2_vld );

  SC_METHOD(drive_dout_vld);
  sensitive << ( dut_Or_1Ux1U_1U_4_18_out1 );

  SC_METHOD(dut_Or_1Ux1U_1U_4_18);
  sensitive << ( dut_Xor_1Ux1U_1U_4_17_out1 );
  sensitive << ( dout_m_unacked_req );

  SC_METHOD(drive_dout_m_unacked_req);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(dut_And_1Ux1U_1U_4_19);
  sensitive << ( dout_vld );
  sensitive << ( dout_busy );

  SC_METHOD(dut_Xor_1Ux1U_1U_4_17);
  sensitive << ( dout_m_req_m_prev_trig_req );
  sensitive << ( dout_m_req_m_trig_req );

  SC_METHOD(drive_dout_m_req_m_prev_trig_req);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(dut_Not_1U_1U_4_20);
  sensitive << ( dout_m_req_m_trig_req );

}
// resource: mux_9bx2i
// resource: regr_9b
void dut::drive_dout_data(){
  if ( stall0.read() );
  else {
    switch( (sc_uint<2>)(global_state.read()) ) {
    case 1ULL: 
      dout_data = (sc_uint<9> ) (din_1_data.read());
      break;
    case 2ULL: 
      dout_data = dut_Add_8Ux8U_9U_4_22_out1.read();
      break;
    }
  }
}
// resource: mux_1bx2i
// resource: regr_1b
void dut::drive_din_1_m_busy_req_0(){
  if ( (rst.read() == 0ULL) ) {
    din_1_m_busy_req_0 = 1ULL;
  } else {
    if ( stall0.read() );
    else {
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        din_1_m_busy_req_0 = 0ULL;
        break;
      case 1ULL: 
        din_1_m_busy_req_0 = 1ULL;
        break;
      }
    }
  }
}
// resource: mux_1bx2i
// resource: regr_1b
void dut::drive_din_2_m_busy_req_0(){
  if ( (rst.read() == 0ULL) ) {
    din_2_m_busy_req_0 = 1ULL;
  } else {
    if ( stall0.read() );
    else {
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 1ULL: 
        din_2_m_busy_req_0 = 0ULL;
        break;
      case 2ULL: 
        din_2_m_busy_req_0 = 1ULL;
        break;
      }
    }
  }
}
// resource: regr_1b
void dut::drive_dout_m_req_m_trig_req(){
  if ( (rst.read() == 0ULL) ) {
    dout_m_req_m_trig_req = 0ULL;
  } else {
    if ( stall0.read() );
    else {
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 2ULL: 
        dout_m_req_m_trig_req = (sc_uint<1> ) (dut_Not_1U_1U_4_20_out1.read());
        break;
      }
    }
  }
}
// resource: mux_1bx4i
void dut::drive_stall0(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    stall0 = 0ULL;
    break;
  case 1ULL: 
    stall0 = dut_Not_1U_1U_4_7_out1.read();
    break;
  case 2ULL: 
    stall0 = dut_Not_1U_1U_4_14_out1.read();
    break;
  case 3ULL: 
    stall0 = dut_And_1Ux1U_1U_4_19_out1.read();
    break;
  }
}
// resource: dut_Add_8Ux8U_9U_4  instance: dut_Add_8Ux8U_9U_4_22
void dut::dut_Add_8Ux8U_9U_4_22(){
  dut_Add_8Ux8U_9U_4_22_out1 = ((sc_uint<8> )dout_data.read() + din_2_data
                               .read());
}
// resource: regr_2b
void dut::drive_global_state(){
  if ( (rst.read() == 0ULL) ) {
    global_state = 0ULL;
  } else {
    if ( stall0.read() );
    else {
      global_state = global_state_next.read();
    }
  }
}
// resource: mux_2bx2i
void dut::drive_global_state_next(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    global_state_next = (global_state.read() + 1ULL);
    break;
  case 0ULL: case 3ULL: 
    global_state_next = 1ULL;
    break;
  }
}
void dut::drive_din_1_busy(){
  din_1_busy = (sc_uint<1> ) (dut_And_1Ux1U_1U_4_4_out1.read());
}
// resource: dut_Or_1Ux1U_1U_4  instance: dut_Or_1Ux1U_1U_4_3
void dut::dut_Or_1Ux1U_1U_4_3(){
  dut_Or_1Ux1U_1U_4_3_out1 = din_1_m_unvalidated_req.read() | din_1_vld.read();
}
// resource: dut_And_1Ux1U_1U_4  instance: dut_And_1Ux1U_1U_4_4
void dut::dut_And_1Ux1U_1U_4_4(){
  dut_And_1Ux1U_1U_4_4_out1 = (sc_uint<1> ) (dut_Or_1Ux1U_1U_4_3_out1.read() & (
                              sc_uint<1> )din_1_m_busy_req_0.read());
}
// resource: dut_Not_1U_1U_4  instance: dut_Not_1U_1U_4_5
void dut::dut_Not_1U_1U_4_5(){
  dut_Not_1U_1U_4_5_out1 = !dut_And_1Ux1U_1U_4_4_out1.read();
}
// resource: dut_And_1Ux1U_1U_4  instance: dut_And_1Ux1U_1U_4_6
void dut::dut_And_1Ux1U_1U_4_6(){
  dut_And_1Ux1U_1U_4_6_out1 = (sc_uint<1> ) (dut_Not_1U_1U_4_5_out1.read() & (
                              sc_uint<1> )din_1_vld.read());
}
// resource: dut_Not_1U_1U_4  instance: dut_Not_1U_1U_4_7
void dut::dut_Not_1U_1U_4_7(){
  dut_Not_1U_1U_4_7_out1 = !dut_And_1Ux1U_1U_4_6_out1.read();
}
// resource: regr_1b
void dut::drive_din_1_m_unvalidated_req(){
  if ( (rst.read() == 0ULL) ) {
    din_1_m_unvalidated_req = 1ULL;
  } else {
    din_1_m_unvalidated_req = (sc_uint<1> ) (dut_N_Muxb_1_2_0_4_1_out1.read());
  }
}
// resource: dut_N_Muxb_1_2_0_4
void dut::dut_N_Muxb_1_2_0_4_1(){
  if ( din_1_m_busy_req_0.read() ) {
    dut_N_Muxb_1_2_0_4_1_out1 = (sc_uint<1> ) (din_1_m_unvalidated_req.read());
  } else {
    dut_N_Muxb_1_2_0_4_1_out1 = (sc_uint<1> ) (din_1_vld.read());
  }
}
void dut::drive_din_2_busy(){
  din_2_busy = (sc_uint<1> ) (dut_And_1Ux1U_1U_4_11_out1.read());
}
// resource: dut_Or_1Ux1U_1U_4  instance: dut_Or_1Ux1U_1U_4_10
void dut::dut_Or_1Ux1U_1U_4_10(){
  dut_Or_1Ux1U_1U_4_10_out1 = din_2_m_unvalidated_req.read() | din_2_vld.read();
}
// resource: dut_And_1Ux1U_1U_4  instance: dut_And_1Ux1U_1U_4_11
void dut::dut_And_1Ux1U_1U_4_11(){
  dut_And_1Ux1U_1U_4_11_out1 = (sc_uint<1> ) (dut_Or_1Ux1U_1U_4_10_out1.read()
                                & (sc_uint<1> )din_2_m_busy_req_0.read());
}
// resource: dut_Not_1U_1U_4  instance: dut_Not_1U_1U_4_12
void dut::dut_Not_1U_1U_4_12(){
  dut_Not_1U_1U_4_12_out1 = !dut_And_1Ux1U_1U_4_11_out1.read();
}
// resource: dut_And_1Ux1U_1U_4  instance: dut_And_1Ux1U_1U_4_13
void dut::dut_And_1Ux1U_1U_4_13(){
  dut_And_1Ux1U_1U_4_13_out1 = (sc_uint<1> ) (dut_Not_1U_1U_4_12_out1.read() & (
                               sc_uint<1> )din_2_vld.read());
}
// resource: dut_Not_1U_1U_4  instance: dut_Not_1U_1U_4_14
void dut::dut_Not_1U_1U_4_14(){
  dut_Not_1U_1U_4_14_out1 = !dut_And_1Ux1U_1U_4_13_out1.read();
}
// resource: regr_1b
void dut::drive_din_2_m_unvalidated_req(){
  if ( (rst.read() == 0ULL) ) {
    din_2_m_unvalidated_req = 1ULL;
  } else {
    din_2_m_unvalidated_req = (sc_uint<1> ) (dut_N_Muxb_1_2_0_4_2_out1.read());
  }
}
// resource: dut_N_Muxb_1_2_0_4
void dut::dut_N_Muxb_1_2_0_4_2(){
  if ( din_2_m_busy_req_0.read() ) {
    dut_N_Muxb_1_2_0_4_2_out1 = (sc_uint<1> ) (din_2_m_unvalidated_req.read());
  } else {
    dut_N_Muxb_1_2_0_4_2_out1 = (sc_uint<1> ) (din_2_vld.read());
  }
}
void dut::drive_dout_vld(){
  dout_vld = (sc_uint<1> ) (dut_Or_1Ux1U_1U_4_18_out1.read());
}
// resource: dut_Or_1Ux1U_1U_4  instance: dut_Or_1Ux1U_1U_4_18
void dut::dut_Or_1Ux1U_1U_4_18(){
  dut_Or_1Ux1U_1U_4_18_out1 = dout_m_unacked_req.read() | (sc_uint<1>)
                              dut_Xor_1Ux1U_1U_4_17_out1.read();
}
// resource: regr_1b
void dut::drive_dout_m_unacked_req(){
  if ( (rst.read() == 0ULL) ) {
    dout_m_unacked_req = 0ULL;
  } else {
    dout_m_unacked_req = (sc_uint<1> ) (dut_And_1Ux1U_1U_4_19_out1.read());
  }
}
// resource: dut_And_1Ux1U_1U_4  instance: dut_And_1Ux1U_1U_4_19
void dut::dut_And_1Ux1U_1U_4_19(){
  dut_And_1Ux1U_1U_4_19_out1 = (sc_uint<1> ) (dout_busy.read() & dout_vld.read()
                               );
}
// resource: dut_Xor_1Ux1U_1U_4  instance: dut_Xor_1Ux1U_1U_4_17
void dut::dut_Xor_1Ux1U_1U_4_17(){
  dut_Xor_1Ux1U_1U_4_17_out1 = (sc_uint<1> ) (dout_m_req_m_trig_req.read() ^ 
                               dout_m_req_m_prev_trig_req.read());
}
// resource: regr_1b
void dut::drive_dout_m_req_m_prev_trig_req(){
  if ( (rst.read() == 0ULL) ) {
    dout_m_req_m_prev_trig_req = 0ULL;
  } else {
    dout_m_req_m_prev_trig_req = dout_m_req_m_trig_req.read();
  }
}
// resource: dut_Not_1U_1U_4  instance: dut_Not_1U_1U_4_20
void dut::dut_Not_1U_1U_4_20(){
  dut_Not_1U_1U_4_20_out1 = !dout_m_req_m_trig_req.read();
}
