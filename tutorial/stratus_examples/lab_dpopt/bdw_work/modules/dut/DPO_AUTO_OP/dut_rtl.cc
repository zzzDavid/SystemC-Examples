// Generated by stratus_hls 17.20-p100  (88533.190925)
// Wed Nov 18 11:33:09 2020
// from dut.cc
#include "dut_rtl.h"

struct dut;
dut::dut(sc_module_name name) : sc_module(name) 
    ,clk("clk")
    ,rst("rst")
    ,din_busy("din_busy")
    ,din_vld("din_vld")
    ,din_data_a("din_data_a")
    ,din_data_b("din_data_b")
    ,din_data_c("din_data_c")
    ,din_data_d("din_data_d")
    ,din_data_e("din_data_e")
    ,din_data_f("din_data_f")
    ,din_data_g("din_data_g")
    ,din_data_h("din_data_h")
    ,dout_busy("dout_busy")
    ,dout_vld("dout_vld")
    ,dout_data("dout_data")
    ,dout_m_req_m_prev_trig_req("dout_m_req_m_prev_trig_req")
    ,dut_Xor_1U_8_4_9_out1("dut_Xor_1U_8_4_9_out1")
    ,dout_m_unacked_req("dout_m_unacked_req")
    ,dut_Or_1U_7_4_10_out1("dut_Or_1U_7_4_10_out1")
    ,dut_N_Muxb_1_2_11_4_1_out1("dut_N_Muxb_1_2_11_4_1_out1")
    ,dut_And_1U_5_4_5_out1("dut_And_1U_5_4_5_out1")
    ,dut_Not_1U_1_4_4_out1("dut_Not_1U_1_4_4_out1")
    ,dut_Or_1U_7_4_2_out1("dut_Or_1U_7_4_2_out1")
    ,din_m_unvalidated_req("din_m_unvalidated_req")
    ,dut_And_1U_5_4_3_out1("dut_And_1U_5_4_3_out1")
    ,global_state_next("global_state_next")
    ,dut_Mul_20Ux9U_29U_1_19_in1("dut_Mul_20Ux9U_29U_1_19_in1")
    ,dut_Add_8Ux8U_9U_4_20_out1("dut_Add_8Ux8U_9U_4_20_out1")
    ,dut_Mul_20Ux9U_29U_1_19_in2("dut_Mul_20Ux9U_29U_1_19_in2")
    ,gs_ctrl8("gs_ctrl8")
    ,dut_Mul_32Ux9U_32U_1_18_in1("dut_Mul_32Ux9U_32U_1_18_in1")
    ,gs_ctrl7("gs_ctrl7")
    ,dut_Mul_32Ux9U_32U_1_18_in2_slice("dut_Mul_32Ux9U_32U_1_18_in2_slice")
    ,gs_ctrl6("gs_ctrl6")
    ,dut_Mul_32Ux32U_32U_1_17_in1("dut_Mul_32Ux32U_32U_1_17_in1")
    ,gs_ctrl5("gs_ctrl5")
    ,dut_Mul_32Ux32U_32U_1_17_in2("dut_Mul_32Ux32U_32U_1_17_in2")
    ,gs_ctrl4("gs_ctrl4")
    ,dut_Add_32Ux32U_32U_1_16_in1("dut_Add_32Ux32U_32U_1_16_in1")
    ,dut_Add_32Ux32U_32U_1_16_in2("dut_Add_32Ux32U_32U_1_16_in2")
    ,gs_ctrl2("gs_ctrl2")
    ,dut_Add_32Ux16U_32U_1_15_out1("dut_Add_32Ux16U_32U_1_15_out1")
    ,dut_Add_32Ux16U_32U_1_15_in1("dut_Add_32Ux16U_32U_1_15_in1")
    ,dut_Add_32Ux16U_32U_1_15_in2("dut_Add_32Ux16U_32U_1_15_in2")
    ,gs_ctrl0("gs_ctrl0")
    ,dut_Add_8Ux8U_9U_4_14_out1("dut_Add_8Ux8U_9U_4_14_out1")
    ,dut_Add_8Ux8U_9U_4_13_out1("dut_Add_8Ux8U_9U_4_13_out1")
    ,dut_Add_32Ux32U_32U_1_16_out1("dut_Add_32Ux32U_32U_1_16_out1")
    ,dut_Add_16Ux16U_17U_4_22_out1("dut_Add_16Ux16U_17U_4_22_out1")
    ,s_reg_32("s_reg_32")
    ,dut_Mul_20Ux9U_29U_1_19_out1("dut_Mul_20Ux9U_29U_1_19_out1")
    ,s_reg_31("s_reg_31")
    ,dut_Mul_32Ux9U_32U_1_18_out1("dut_Mul_32Ux9U_32U_1_18_out1")
    ,s_reg_30("s_reg_30")
    ,dut_Add_8Ux8U_9U_4_25_out1("dut_Add_8Ux8U_9U_4_25_out1")
    ,s_reg_29("s_reg_29")
    ,s_reg_28("s_reg_28")
    ,s_reg_27("s_reg_27")
    ,s_reg_26("s_reg_26")
    ,s_reg_25("s_reg_25")
    ,s_reg_24("s_reg_24")
    ,s_reg_23("s_reg_23")
    ,dut_Not_1U_1_4_6_out1("dut_Not_1U_1_4_6_out1")
    ,dut_And_1U_5_4_11_out1("dut_And_1U_5_4_11_out1")
    ,dut_Not_1U_1_4_12_out1("dut_Not_1U_1_4_12_out1")
    ,dout_m_req_m_trig_req("dout_m_req_m_trig_req")
    ,din_m_busy_req_0("din_m_busy_req_0")
    ,dut_Mul_32Ux32U_32U_1_17_out1("dut_Mul_32Ux32U_32U_1_17_out1")
    ,global_state("global_state")
    ,stall0("stall0")
{
  SC_METHOD(drive_dout_data);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_din_m_busy_req_0);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_dout_m_req_m_trig_req);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_stall0);
  sensitive << ( global_state );
  sensitive << ( dut_Not_1U_1_4_6_out1 );
  sensitive << ( dut_And_1U_5_4_11_out1 );

  SC_METHOD(drive_s_reg_23);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_24);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_25);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_26);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_27);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_28);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_29);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_30);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_31);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_32);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(dut_Add_8Ux8U_9U_4_13);
  sensitive << ( din_data_e );
  sensitive << ( din_data_d );

  SC_METHOD(dut_Add_8Ux8U_9U_4_14);
  sensitive << ( din_data_b );
  sensitive << ( din_data_a );

  SC_METHOD(drive_dut_Add_32Ux16U_32U_1_15_in2);
  sensitive << ( gs_ctrl0 );
  sensitive << ( dut_Add_8Ux8U_9U_4_13_out1 );
  sensitive << ( s_reg_23 );
  sensitive << ( s_reg_32 );

  SC_METHOD(drive_dut_Add_32Ux16U_32U_1_15_in1);
  sensitive << ( gs_ctrl0 );
  sensitive << ( din_data_f );
  sensitive << ( s_reg_24 );
  sensitive << ( s_reg_30 );

  SC_METHOD(dut_Add_32Ux16U_32U_1_15);
  sensitive << ( dut_Add_32Ux16U_32U_1_15_in1 );
  sensitive << ( dut_Add_32Ux16U_32U_1_15_in2 );

  SC_METHOD(drive_dut_Add_32Ux32U_32U_1_16_in2);
  sensitive << ( gs_ctrl2 );
  sensitive << ( dout_data );
  sensitive << ( dut_Add_8Ux8U_9U_4_14_out1 );

  SC_METHOD(drive_dut_Add_32Ux32U_32U_1_16_in1);
  sensitive << ( gs_ctrl0 );
  sensitive << ( din_data_c );
  sensitive << ( s_reg_32 );
  sensitive << ( dut_Mul_32Ux9U_32U_1_18_out1 );

  SC_METHOD(dut_Add_32Ux32U_32U_1_16);
  sensitive << ( dut_Add_32Ux32U_32U_1_16_in1 );
  sensitive << ( dut_Add_32Ux32U_32U_1_16_in2 );

  SC_METHOD(drive_dut_Mul_32Ux32U_32U_1_17_in2);
  sensitive << ( gs_ctrl4 );
  sensitive << ( dut_Add_32Ux32U_32U_1_16_out1 );
  sensitive << ( dut_Mul_20Ux9U_29U_1_19_out1 );

  SC_METHOD(drive_dut_Mul_32Ux32U_32U_1_17_in1);
  sensitive << ( gs_ctrl5 );
  sensitive << ( dut_Add_32Ux16U_32U_1_15_out1 );
  sensitive << ( s_reg_26 );

  SC_METHOD(dut_Mul_32Ux32U_32U_1_17);
  sensitive << ( dut_Mul_32Ux32U_32U_1_17_in1 );
  sensitive << ( dut_Mul_32Ux32U_32U_1_17_in2 );

  SC_METHOD(drive_dut_Mul_32Ux9U_32U_1_18_in2);
  sensitive << ( gs_ctrl6 );
  sensitive << ( din_data_c );
  sensitive << ( s_reg_28 );
  sensitive << ( s_reg_31 );

  SC_METHOD(drive_dut_Mul_32Ux9U_32U_1_18_in1);
  sensitive << ( gs_ctrl7 );
  sensitive << ( s_reg_29 );
  sensitive << ( din_data_d );

  SC_METHOD(dut_Mul_32Ux9U_32U_1_18);
  sensitive << ( dut_Mul_32Ux9U_32U_1_18_in1 );
  sensitive << ( dut_Mul_32Ux9U_32U_1_18_in2_slice );

  SC_METHOD(drive_dut_Mul_20Ux9U_29U_1_19_in2);
  sensitive << ( gs_ctrl8 );
  sensitive << ( dout_data );
  sensitive << ( din_data_a );

  SC_METHOD(drive_dut_Mul_20Ux9U_29U_1_19_in1);
  sensitive << ( gs_ctrl8 );
  sensitive << ( dut_Add_8Ux8U_9U_4_20_out1 );
  sensitive << ( din_data_b );

  SC_METHOD(dut_Mul_20Ux9U_29U_1_19);
  sensitive << ( dut_Mul_20Ux9U_29U_1_19_in1 );
  sensitive << ( dut_Mul_20Ux9U_29U_1_19_in2 );

  SC_METHOD(dut_Add_8Ux8U_9U_4_20);
  sensitive << ( s_reg_29 );
  sensitive << ( s_reg_28 );

  SC_METHOD(dut_Add_16Ux16U_17U_4_22);
  sensitive << ( s_reg_30 );
  sensitive << ( s_reg_31 );

  SC_METHOD(dut_Add_8Ux8U_9U_4_25);
  sensitive << ( s_reg_27 );
  sensitive << ( s_reg_25 );

  SC_METHOD(drive_global_state);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_global_state_next);
  sensitive << ( global_state );

  SC_METHOD(drive_gs_ctrl0);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl2);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl4);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl5);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl6);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl7);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl8);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_din_busy);
  sensitive << ( dut_And_1U_5_4_3_out1 );

  SC_METHOD(dut_Or_1U_7_4_2);
  sensitive << ( din_vld );
  sensitive << ( din_m_unvalidated_req );

  SC_METHOD(dut_And_1U_5_4_3);
  sensitive << ( din_m_busy_req_0 );
  sensitive << ( dut_Or_1U_7_4_2_out1 );

  SC_METHOD(dut_Not_1U_1_4_4);
  sensitive << ( dut_And_1U_5_4_3_out1 );

  SC_METHOD(dut_And_1U_5_4_5);
  sensitive << ( din_vld );
  sensitive << ( dut_Not_1U_1_4_4_out1 );

  SC_METHOD(dut_Not_1U_1_4_6);
  sensitive << ( dut_And_1U_5_4_5_out1 );

  SC_METHOD(drive_din_m_unvalidated_req);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(dut_N_Muxb_1_2_11_4_1);
  sensitive << ( din_m_busy_req_0 );
  sensitive << ( din_m_unvalidated_req );
  sensitive << ( din_vld );

  SC_METHOD(drive_dout_vld);
  sensitive << ( dut_Or_1U_7_4_10_out1 );

  SC_METHOD(dut_Or_1U_7_4_10);
  sensitive << ( dut_Xor_1U_8_4_9_out1 );
  sensitive << ( dout_m_unacked_req );

  SC_METHOD(drive_dout_m_unacked_req);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(dut_And_1U_5_4_11);
  sensitive << ( dout_vld );
  sensitive << ( dout_busy );

  SC_METHOD(dut_Xor_1U_8_4_9);
  sensitive << ( dout_m_req_m_prev_trig_req );
  sensitive << ( dout_m_req_m_trig_req );

  SC_METHOD(drive_dout_m_req_m_prev_trig_req);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(dut_Not_1U_1_4_12);
  sensitive << ( dout_m_req_m_trig_req );

}
// resource: mux_32bx2i
// resource: regr_32b
void dut::drive_dout_data(){
  if ( stall0.read() );
  else {
    switch( (sc_uint<3>)(global_state.read()) ) {
    case 1ULL: 
      dout_data = (sc_uint<32> ) ((sc_uint<20> )dut_Mul_32Ux32U_32U_1_17_out1
                  .read());
      break;
    case 2ULL: case 3ULL: case 4ULL: 
      dout_data = dut_Mul_32Ux32U_32U_1_17_out1.read();
      break;
    }
  }
}
// resource: mux_1bx2i
// resource: regr_1b
void dut::drive_din_m_busy_req_0(){
  if ( (rst.read() == 0ULL) ) {
    din_m_busy_req_0 = 1ULL;
  } else {
    if ( stall0.read() );
    else {
      switch( (sc_uint<3>)(global_state.read()) ) {
      case 0ULL: case 5ULL: 
        din_m_busy_req_0 = 0ULL;
        break;
      case 1ULL: 
        din_m_busy_req_0 = 1ULL;
        break;
      }
    }
  }
}
// resource: regr_1b
void dut::drive_dout_m_req_m_trig_req(){
  if ( (rst.read() == 0ULL) ) {
    dout_m_req_m_trig_req = 0ULL;
  } else {
    if ( stall0.read() );
    else {
      switch( (sc_uint<3>)(global_state.read()) ) {
      case 4ULL: 
        dout_m_req_m_trig_req = (sc_uint<1> ) (dut_Not_1U_1_4_12_out1.read());
        break;
      }
    }
  }
}
// resource: mux_1bx3i
void dut::drive_stall0(){
  switch( (sc_uint<3>)(global_state.read()) ) {
  default:
    stall0 = 0ULL;
    break;
  case 1ULL: 
    stall0 = dut_Not_1U_1_4_6_out1.read();
    break;
  case 5ULL: 
    stall0 = dut_And_1U_5_4_11_out1.read();
    break;
  }
}
// resource: regr_8b
void dut::drive_s_reg_23(){
  if ( stall0.read() );
  else {
    switch( (sc_uint<3>)(global_state.read()) ) {
    case 1ULL: 
      s_reg_23 = din_data_a.read();
      break;
    }
  }
}
// resource: regr_8b
void dut::drive_s_reg_24(){
  if ( stall0.read() );
  else {
    switch( (sc_uint<3>)(global_state.read()) ) {
    case 1ULL: 
      s_reg_24 = din_data_b.read();
      break;
    }
  }
}
// resource: regr_8b
void dut::drive_s_reg_25(){
  if ( stall0.read() );
  else {
    switch( (sc_uint<3>)(global_state.read()) ) {
    case 1ULL: 
      s_reg_25 = din_data_d.read();
      break;
    }
  }
}
// resource: regr_8b
void dut::drive_s_reg_26(){
  if ( stall0.read() );
  else {
    s_reg_26 = din_data_e.read();
  }
}
// resource: regr_8b
void dut::drive_s_reg_27(){
  if ( stall0.read() );
  else {
    switch( (sc_uint<3>)(global_state.read()) ) {
    case 1ULL: 
      s_reg_27 = din_data_c.read();
      break;
    }
  }
}
// resource: regr_8b
void dut::drive_s_reg_28(){
  if ( stall0.read() );
  else {
    s_reg_28 = din_data_g.read();
  }
}
// resource: mux_9bx2i
// resource: regr_9b
void dut::drive_s_reg_29(){
  if ( stall0.read() );
  else {
    switch( (sc_uint<3>)(global_state.read()) ) {
    case 1ULL: 
      s_reg_29 = (sc_uint<9> ) (din_data_h.read());
      break;
    case 3ULL: 
      s_reg_29 = dut_Add_8Ux8U_9U_4_25_out1.read();
      break;
    }
  }
}
// resource: regr_16b
void dut::drive_s_reg_30(){
  if ( stall0.read() );
  else {
    switch( (sc_uint<3>)(global_state.read()) ) {
    case 1ULL: case 2ULL: 
      s_reg_30 = (sc_uint<16> )dut_Mul_32Ux9U_32U_1_18_out1.read();
      break;
    }
  }
}
// resource: mux_29bx2i
// resource: regr_29b
void dut::drive_s_reg_31(){
  if ( stall0.read() );
  else {
    switch( (sc_uint<3>)(global_state.read()) ) {
    case 1ULL: 
      s_reg_31 = (sc_uint<29> ) ((sc_uint<16> )dut_Mul_20Ux9U_29U_1_19_out1
                 .read());
      break;
    case 2ULL: 
      s_reg_31 = dut_Mul_20Ux9U_29U_1_19_out1.read();
      break;
    }
  }
}
// resource: mux_32bx2i
// resource: regr_32b
void dut::drive_s_reg_32(){
  if ( stall0.read() );
  else {
    switch( (sc_uint<3>)(global_state.read()) ) {
    case 2ULL: 
      s_reg_32 = (sc_uint<32> ) (dut_Add_16Ux16U_17U_4_22_out1.read());
      break;
    case 3ULL: 
      s_reg_32 = dut_Add_32Ux32U_32U_1_16_out1.read();
      break;
    }
  }
}
// resource: dut_Add_8Ux8U_9U_4  instance: dut_Add_8Ux8U_9U_4_13
void dut::dut_Add_8Ux8U_9U_4_13(){
  dut_Add_8Ux8U_9U_4_13_out1 = (din_data_d.read() + din_data_e.read());
}
// resource: dut_Add_8Ux8U_9U_4  instance: dut_Add_8Ux8U_9U_4_14
void dut::dut_Add_8Ux8U_9U_4_14(){
  dut_Add_8Ux8U_9U_4_14_out1 = (din_data_a.read() + din_data_b.read());
}
// resource: mux_32bx3i
void dut::drive_dut_Add_32Ux16U_32U_1_15_in2(){
  switch( (sc_uint<2>)(gs_ctrl0.read()) ) {
  default:
    dut_Add_32Ux16U_32U_1_15_in2 = (sc_uint<32> ) (dut_Add_8Ux8U_9U_4_13_out1
                                   .read());
    break;
  case 1ULL: 
    dut_Add_32Ux16U_32U_1_15_in2 = (sc_uint<32> ) (s_reg_23.read());
    break;
  case 2ULL: 
    dut_Add_32Ux16U_32U_1_15_in2 = s_reg_32.read();
    break;
  }
}
// resource: mux_16bx3i
void dut::drive_dut_Add_32Ux16U_32U_1_15_in1(){
  switch( (sc_uint<2>)(gs_ctrl0.read()) ) {
  default:
    dut_Add_32Ux16U_32U_1_15_in1 = (sc_uint<16> ) (din_data_f.read());
    break;
  case 1ULL: 
    dut_Add_32Ux16U_32U_1_15_in1 = (sc_uint<16> ) (s_reg_24.read());
    break;
  case 2ULL: 
    dut_Add_32Ux16U_32U_1_15_in1 = s_reg_30.read();
    break;
  }
}
// resource: dut_Add_32Ux16U_32U_1  instance: dut_Add_32Ux16U_32U_1_15
void dut::dut_Add_32Ux16U_32U_1_15(){
  dut_Add_32Ux16U_32U_1_15_out1 = (dut_Add_32Ux16U_32U_1_15_in2.read() + 
                                  dut_Add_32Ux16U_32U_1_15_in1.read());
}
// resource: mux_32bx2i
void dut::drive_dut_Add_32Ux32U_32U_1_16_in2(){
  if ( gs_ctrl2.read() ) {
    dut_Add_32Ux32U_32U_1_16_in2 = dout_data.read();
  } else {
    dut_Add_32Ux32U_32U_1_16_in2 = (sc_uint<32> ) (dut_Add_8Ux8U_9U_4_14_out1
                                   .read());
  }
}
// resource: mux_32bx3i
void dut::drive_dut_Add_32Ux32U_32U_1_16_in1(){
  switch( (sc_uint<2>)(gs_ctrl0.read()) ) {
  default:
    dut_Add_32Ux32U_32U_1_16_in1 = (sc_uint<32> ) (din_data_c.read());
    break;
  case 1ULL: 
    dut_Add_32Ux32U_32U_1_16_in1 = s_reg_32.read();
    break;
  case 2ULL: 
    dut_Add_32Ux32U_32U_1_16_in1 = dut_Mul_32Ux9U_32U_1_18_out1.read();
    break;
  }
}
// resource: dut_Add_32Ux32U_32U_1  instance: dut_Add_32Ux32U_32U_1_16
void dut::dut_Add_32Ux32U_32U_1_16(){
  dut_Add_32Ux32U_32U_1_16_out1 = (dut_Add_32Ux32U_32U_1_16_in2.read() + 
                                  dut_Add_32Ux32U_32U_1_16_in1.read());
}
// resource: mux_32bx3i
void dut::drive_dut_Mul_32Ux32U_32U_1_17_in2(){
  switch( (sc_uint<2>)(gs_ctrl4.read()) ) {
  default:
    dut_Mul_32Ux32U_32U_1_17_in2 = (sc_uint<32> ) ((sc_uint<10> )
                                   dut_Add_32Ux32U_32U_1_16_out1.read());
    break;
  case 1ULL: 
    dut_Mul_32Ux32U_32U_1_17_in2 = (sc_uint<32> ) (dut_Mul_20Ux9U_29U_1_19_out1
                                   .read());
    break;
  case 2ULL: 
    dut_Mul_32Ux32U_32U_1_17_in2 = dut_Add_32Ux32U_32U_1_16_out1.read();
    break;
  }
}
// resource: mux_32bx4i
void dut::drive_dut_Mul_32Ux32U_32U_1_17_in1(){
  switch( (sc_uint<2>)(gs_ctrl5.read()) ) {
  default:
    dut_Mul_32Ux32U_32U_1_17_in1 = (sc_uint<32> ) ((sc_uint<10> )
                                   dut_Add_32Ux16U_32U_1_15_out1.read());
    break;
  case 1ULL: 
    dut_Mul_32Ux32U_32U_1_17_in1 = (sc_uint<32> ) (s_reg_26.read());
    break;
  case 2ULL: 
    dut_Mul_32Ux32U_32U_1_17_in1 = (sc_uint<32> ) ((sc_uint<9> )
                                   dut_Add_32Ux16U_32U_1_15_out1.read());
    break;
  case 3ULL: 
    dut_Mul_32Ux32U_32U_1_17_in1 = dut_Add_32Ux16U_32U_1_15_out1.read();
    break;
  }
}
// resource: dut_Mul_32Ux32U_32U_1  instance: dut_Mul_32Ux32U_32U_1_17
void dut::dut_Mul_32Ux32U_32U_1_17(){
  dut_Mul_32Ux32U_32U_1_17_out1 = dut_Mul_32Ux32U_32U_1_17_in2.read() * 
                                  dut_Mul_32Ux32U_32U_1_17_in1.read();
}
// resource: mux_29bx3i
void dut::drive_dut_Mul_32Ux9U_32U_1_18_in2(){
  switch( (sc_uint<2>)(gs_ctrl6.read()) ) {
  default:
    dut_Mul_32Ux9U_32U_1_18_in2_slice = (sc_uint<29> ) (din_data_c.read());
    break;
  case 1ULL: 
    dut_Mul_32Ux9U_32U_1_18_in2_slice = (sc_uint<29> ) (s_reg_28.read());
    break;
  case 2ULL: 
    dut_Mul_32Ux9U_32U_1_18_in2_slice = s_reg_31.read();
    break;
  }
}
// resource: mux_9bx2i
void dut::drive_dut_Mul_32Ux9U_32U_1_18_in1(){
  if ( gs_ctrl7.read() ) {
    dut_Mul_32Ux9U_32U_1_18_in1 = s_reg_29.read();
  } else {
    dut_Mul_32Ux9U_32U_1_18_in1 = (sc_uint<9> ) (din_data_d.read());
  }
}
// resource: dut_Mul_32Ux9U_32U_1  instance: dut_Mul_32Ux9U_32U_1_18
void dut::dut_Mul_32Ux9U_32U_1_18(){
  dut_Mul_32Ux9U_32U_1_18_out1 = ( (sc_uint<32> )(sc_bv<32>)((sc_bv<3>)(0ULL), 
                                 (sc_bv<29>)(dut_Mul_32Ux9U_32U_1_18_in2_slice
                                 .read())) ) * dut_Mul_32Ux9U_32U_1_18_in1
                                 .read();
}
// resource: mux_20bx2i
void dut::drive_dut_Mul_20Ux9U_29U_1_19_in2(){
  if ( gs_ctrl8.read() ) {
    dut_Mul_20Ux9U_29U_1_19_in2 = (sc_uint<20> )dout_data.read();
  } else {
    dut_Mul_20Ux9U_29U_1_19_in2 = (sc_uint<20> ) (din_data_a.read());
  }
}
// resource: mux_9bx2i
void dut::drive_dut_Mul_20Ux9U_29U_1_19_in1(){
  if ( gs_ctrl8.read() ) {
    dut_Mul_20Ux9U_29U_1_19_in1 = dut_Add_8Ux8U_9U_4_20_out1.read();
  } else {
    dut_Mul_20Ux9U_29U_1_19_in1 = (sc_uint<9> ) (din_data_b.read());
  }
}
// resource: dut_Mul_20Ux9U_29U_1  instance: dut_Mul_20Ux9U_29U_1_19
void dut::dut_Mul_20Ux9U_29U_1_19(){
  dut_Mul_20Ux9U_29U_1_19_out1 = dut_Mul_20Ux9U_29U_1_19_in2.read() * 
                                 dut_Mul_20Ux9U_29U_1_19_in1.read();
}
// resource: dut_Add_8Ux8U_9U_4  instance: dut_Add_8Ux8U_9U_4_20
void dut::dut_Add_8Ux8U_9U_4_20(){
  dut_Add_8Ux8U_9U_4_20_out1 = (s_reg_28.read() + (sc_uint<8> )s_reg_29.read());
}
// resource: dut_Add_16Ux16U_17U_4  instance: dut_Add_16Ux16U_17U_4_22
void dut::dut_Add_16Ux16U_17U_4_22(){
  dut_Add_16Ux16U_17U_4_22_out1 = ((sc_uint<16> )s_reg_31.read() + s_reg_30
                                  .read());
}
// resource: dut_Add_8Ux8U_9U_4  instance: dut_Add_8Ux8U_9U_4_25
void dut::dut_Add_8Ux8U_9U_4_25(){
  dut_Add_8Ux8U_9U_4_25_out1 = (s_reg_25.read() + s_reg_27.read());
}
// resource: regr_3b
void dut::drive_global_state(){
  if ( (rst.read() == 0ULL) ) {
    global_state = 0ULL;
  } else {
    if ( stall0.read() );
    else {
      global_state = global_state_next.read();
    }
  }
}
// resource: mux_3bx2i
void dut::drive_global_state_next(){
  switch( (sc_uint<3>)(global_state.read()) ) {
  default:
    global_state_next = (global_state.read() + 1ULL);
    break;
  case 0ULL: case 5ULL: 
    global_state_next = 1ULL;
    break;
  }
}
// resource: mux_2bx3i
// resource: regr_2b
void dut::drive_gs_ctrl0(){
  if ( (rst.read() == 0ULL) ) {
    gs_ctrl0 = 0ULL;
  } else {
    if ( stall0.read() );
    else {
      switch( (sc_uint<3>)(global_state_next.read()) ) {
      default:
        gs_ctrl0 = 0ULL;
        break;
      case 3ULL: 
        gs_ctrl0 = 1ULL;
        break;
      case 4ULL: 
        gs_ctrl0 = 2ULL;
        break;
      }
    }
  }
}
// resource: mux_1bx2i
// resource: regr_1b
void dut::drive_gs_ctrl2(){
  if ( (rst.read() == 0ULL) ) {
    gs_ctrl2 = 0ULL;
  } else {
    if ( stall0.read() );
    else {
      switch( (sc_uint<3>)(global_state_next.read()) ) {
      default:
        gs_ctrl2 = 0ULL;
        break;
      case 3ULL: case 4ULL: 
        gs_ctrl2 = 1ULL;
        break;
      }
    }
  }
}
// resource: mux_2bx3i
// resource: regr_2b
void dut::drive_gs_ctrl4(){
  if ( (rst.read() == 0ULL) ) {
    gs_ctrl4 = 0ULL;
  } else {
    if ( stall0.read() );
    else {
      switch( (sc_uint<3>)(global_state_next.read()) ) {
      default:
        gs_ctrl4 = 0ULL;
        break;
      case 2ULL: 
        gs_ctrl4 = 1ULL;
        break;
      case 3ULL: case 4ULL: 
        gs_ctrl4 = 2ULL;
        break;
      }
    }
  }
}
// resource: mux_2bx4i
// resource: regr_2b
void dut::drive_gs_ctrl5(){
  if ( (rst.read() == 0ULL) ) {
    gs_ctrl5 = 0ULL;
  } else {
    if ( stall0.read() );
    else {
      switch( (sc_uint<3>)(global_state_next.read()) ) {
      default:
        gs_ctrl5 = 0ULL;
        break;
      case 2ULL: 
        gs_ctrl5 = 1ULL;
        break;
      case 3ULL: 
        gs_ctrl5 = 2ULL;
        break;
      case 4ULL: 
        gs_ctrl5 = 3ULL;
        break;
      }
    }
  }
}
// resource: mux_2bx3i
// resource: regr_2b
void dut::drive_gs_ctrl6(){
  if ( (rst.read() == 0ULL) ) {
    gs_ctrl6 = 0ULL;
  } else {
    if ( stall0.read() );
    else {
      switch( (sc_uint<3>)(global_state_next.read()) ) {
      default:
        gs_ctrl6 = 0ULL;
        break;
      case 2ULL: 
        gs_ctrl6 = 1ULL;
        break;
      case 4ULL: 
        gs_ctrl6 = 2ULL;
        break;
      }
    }
  }
}
// resource: mux_1bx2i
// resource: regr_1b
void dut::drive_gs_ctrl7(){
  if ( (rst.read() == 0ULL) ) {
    gs_ctrl7 = 0ULL;
  } else {
    if ( stall0.read() );
    else {
      switch( (sc_uint<3>)(global_state_next.read()) ) {
      default:
        gs_ctrl7 = 0ULL;
        break;
      case 2ULL: case 4ULL: 
        gs_ctrl7 = 1ULL;
        break;
      }
    }
  }
}
// resource: mux_1bx2i
// resource: regr_1b
void dut::drive_gs_ctrl8(){
  if ( (rst.read() == 0ULL) ) {
    gs_ctrl8 = 0ULL;
  } else {
    if ( stall0.read() );
    else {
      switch( (sc_uint<3>)(global_state_next.read()) ) {
      default:
        gs_ctrl8 = 0ULL;
        break;
      case 2ULL: 
        gs_ctrl8 = 1ULL;
        break;
      }
    }
  }
}
void dut::drive_din_busy(){
  din_busy = (sc_uint<1> ) (dut_And_1U_5_4_3_out1.read());
}
// resource: dut_Or_1U_7_4  instance: dut_Or_1U_7_4_2
void dut::dut_Or_1U_7_4_2(){
  dut_Or_1U_7_4_2_out1 = din_m_unvalidated_req.read() | din_vld.read();
}
// resource: dut_And_1U_5_4  instance: dut_And_1U_5_4_3
void dut::dut_And_1U_5_4_3(){
  dut_And_1U_5_4_3_out1 = (sc_uint<1> ) (dut_Or_1U_7_4_2_out1.read() & (
                          sc_uint<1> )din_m_busy_req_0.read());
}
// resource: dut_Not_1U_1_4  instance: dut_Not_1U_1_4_4
void dut::dut_Not_1U_1_4_4(){
  dut_Not_1U_1_4_4_out1 = !dut_And_1U_5_4_3_out1.read();
}
// resource: dut_And_1U_5_4  instance: dut_And_1U_5_4_5
void dut::dut_And_1U_5_4_5(){
  dut_And_1U_5_4_5_out1 = (sc_uint<1> ) (dut_Not_1U_1_4_4_out1.read() & (
                          sc_uint<1> )din_vld.read());
}
// resource: dut_Not_1U_1_4  instance: dut_Not_1U_1_4_6
void dut::dut_Not_1U_1_4_6(){
  dut_Not_1U_1_4_6_out1 = !dut_And_1U_5_4_5_out1.read();
}
// resource: regr_1b
void dut::drive_din_m_unvalidated_req(){
  if ( (rst.read() == 0ULL) ) {
    din_m_unvalidated_req = 1ULL;
  } else {
    din_m_unvalidated_req = (sc_uint<1> ) (dut_N_Muxb_1_2_11_4_1_out1.read());
  }
}
// resource: dut_N_Muxb_1_2_11_4
void dut::dut_N_Muxb_1_2_11_4_1(){
  if ( din_m_busy_req_0.read() ) {
    dut_N_Muxb_1_2_11_4_1_out1 = (sc_uint<1> ) (din_m_unvalidated_req.read());
  } else {
    dut_N_Muxb_1_2_11_4_1_out1 = (sc_uint<1> ) (din_vld.read());
  }
}
void dut::drive_dout_vld(){
  dout_vld = (sc_uint<1> ) (dut_Or_1U_7_4_10_out1.read());
}
// resource: dut_Or_1U_7_4  instance: dut_Or_1U_7_4_10
void dut::dut_Or_1U_7_4_10(){
  dut_Or_1U_7_4_10_out1 = dout_m_unacked_req.read() | (sc_uint<1>)
                          dut_Xor_1U_8_4_9_out1.read();
}
// resource: regr_1b
void dut::drive_dout_m_unacked_req(){
  if ( (rst.read() == 0ULL) ) {
    dout_m_unacked_req = 0ULL;
  } else {
    dout_m_unacked_req = (sc_uint<1> ) (dut_And_1U_5_4_11_out1.read());
  }
}
// resource: dut_And_1U_5_4  instance: dut_And_1U_5_4_11
void dut::dut_And_1U_5_4_11(){
  dut_And_1U_5_4_11_out1 = (sc_uint<1> ) (dout_busy.read() & dout_vld.read());
}
// resource: dut_Xor_1U_8_4  instance: dut_Xor_1U_8_4_9
void dut::dut_Xor_1U_8_4_9(){
  dut_Xor_1U_8_4_9_out1 = (sc_uint<1> ) (dout_m_req_m_trig_req.read() ^ 
                          dout_m_req_m_prev_trig_req.read());
}
// resource: regr_1b
void dut::drive_dout_m_req_m_prev_trig_req(){
  if ( (rst.read() == 0ULL) ) {
    dout_m_req_m_prev_trig_req = 0ULL;
  } else {
    dout_m_req_m_prev_trig_req = dout_m_req_m_trig_req.read();
  }
}
// resource: dut_Not_1U_1_4  instance: dut_Not_1U_1_4_12
void dut::dut_Not_1U_1_4_12(){
  dut_Not_1U_1_4_12_out1 = !dout_m_req_m_trig_req.read();
}
