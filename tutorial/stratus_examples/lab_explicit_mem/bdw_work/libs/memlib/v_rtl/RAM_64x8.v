// Generated by stratus_vlg 17.20-p100  (88533.190922)
// Tue Nov 17 14:53:22 2020
// from ../../..//memlib/c_parts/RAM_64x8.cc

`timescale 1ps / 1ps

      
///////////////////////////////////////////////////////////////////////////////
//
// Copyright (c) 2017 Cadence Design Systems, Inc. All rights reserved worldwide.
//
// The code contained herein is the proprietary and confidential information
// of Cadence or its licensors, and is supplied subject to a previously
// executed license and maintenance agreement between Cadence and customer.
// This code is intended for use with Cadence high-level synthesis tools and
// may not be used with other high-level synthesis tools. Permission is only
// granted to distribute the code as indicated. Cadence grants permission for
// customer to distribute a copy of this code to any partner to aid in designing
// or verifying the customer's intellectual property, as long as such
// distribution includes a restriction of no additional distributions from the
// partner, unless the partner receives permission directly from Cadence.
//
// ALL CODE FURNISHED BY CADENCE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY
// KIND, AND CADENCE SPECIFICALLY DISCLAIMS ANY WARRANTY OF NONINFRINGEMENT,
// FITNESS FOR A PARTICULAR PURPOSE OR MERCHANTABILITY. CADENCE SHALL NOT BE
// LIABLE FOR ANY COSTS OF PROCUREMENT OF SUBSTITUTES, LOSS OF PROFITS,
// INTERRUPTION OF BUSINESS, OR FOR ANY OTHER SPECIAL, CONSEQUENTIAL OR
// INCIDENTAL DAMAGES, HOWEVER CAUSED, WHETHER FOR BREACH OF WARRANTY,
// CONTRACT, TORT, NEGLIGENCE, STRICT LIABILITY OR OTHERWISE.
//
////////////////////////////////////////////////////////////////////////////////
module RAM_64x8(CLK, WE0, DIN0, DOUT0, A0);

      input CLK;
      input WE0;
      input [7:0] DIN0;
      input [5:0] A0;
      output [7:0] DOUT0;
      reg [7:0] DOUT0;
      reg[7:0] mem[63:0];

         ///////////////////////////////////////////////////////////////////////////////
         //
         // Copyright (c) 2017 Cadence Design Systems, Inc. All rights reserved worldwide.
         //
         // The code contained herein is the proprietary and confidential information
         // of Cadence or its licensors, and is supplied subject to a previously
         // executed license and maintenance agreement between Cadence and customer.
         // This code is intended for use with Cadence high-level synthesis tools and
         // may not be used with other high-level synthesis tools. Permission is only
         // granted to distribute the code as indicated. Cadence grants permission for
         // customer to distribute a copy of this code to any partner to aid in designing
         // or verifying the customer's intellectual property, as long as such
         // distribution includes a restriction of no additional distributions from the
         // partner, unless the partner receives permission directly from Cadence.
         //
         // ALL CODE FURNISHED BY CADENCE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY
         // KIND, AND CADENCE SPECIFICALLY DISCLAIMS ANY WARRANTY OF NONINFRINGEMENT,
         // FITNESS FOR A PARTICULAR PURPOSE OR MERCHANTABILITY. CADENCE SHALL NOT BE
         // LIABLE FOR ANY COSTS OF PROCUREMENT OF SUBSTITUTES, LOSS OF PROFITS,
         // INTERRUPTION OF BUSINESS, OR FOR ANY OTHER SPECIAL, CONSEQUENTIAL OR
         // INCIDENTAL DAMAGES, HOWEVER CAUSED, WHETHER FOR BREACH OF WARRANTY,
         // CONTRACT, TORT, NEGLIGENCE, STRICT LIABILITY OR OTHERWISE.
         //
         ////////////////////////////////////////////////////////////////////////////////
         always @(posedge CLK)
          begin :thread0
            // Perform an address range check to prevent crashes on out of bounds
            // accesses in SystemC behavioral simulations.
            if (WE0 == 1'b0) begin
               mem[A0] = DIN0;
            end
            else begin
               DOUT0 <= mem[A0];
            end
         end


endmodule

