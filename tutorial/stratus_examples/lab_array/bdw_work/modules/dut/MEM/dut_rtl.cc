// Generated by stratus_hls 17.20-p100  (88533.190925)
// Tue Nov 17 14:07:54 2020
// from dut.cc
#include "dut_rtl.h"

struct dut;
dut::dut(sc_module_name name) : sc_module(name) 
    ,clk("clk")
    ,rst("rst")
    ,din_busy("din_busy")
    ,din_vld("din_vld")
    ,din_data("din_data")
    ,dout_busy("dout_busy")
    ,dout_vld("dout_vld")
    ,dout_data("dout_data")
    ,dout_m_req_m_prev_trig_req("dout_m_req_m_prev_trig_req")
    ,dut_Xor_1Ux1U_1U_4_9_out1("dut_Xor_1Ux1U_1U_4_9_out1")
    ,dout_m_unacked_req("dout_m_unacked_req")
    ,dut_Or_1Ux1U_1U_4_10_out1("dut_Or_1Ux1U_1U_4_10_out1")
    ,dut_N_Muxb_1_2_0_4_1_out1("dut_N_Muxb_1_2_0_4_1_out1")
    ,dut_And_1Ux1U_1U_4_5_out1("dut_And_1Ux1U_1U_4_5_out1")
    ,dut_Not_1U_1U_4_4_out1("dut_Not_1U_1U_4_4_out1")
    ,dut_Or_1Ux1U_1U_4_2_out1("dut_Or_1Ux1U_1U_4_2_out1")
    ,din_m_unvalidated_req("din_m_unvalidated_req")
    ,dut_And_1Ux1U_1U_4_3_out1("dut_And_1Ux1U_1U_4_3_out1")
    ,global_state_next("global_state_next")
    ,gs_ctrl3("gs_ctrl3")
    ,gs_ctrl1("gs_ctrl1")
    ,dut_Add_6Ux1U_6U_4_15_out1("dut_Add_6Ux1U_6U_4_15_out1")
    ,dut_Add_7Sx2S_8S_4_13_in2("dut_Add_7Sx2S_8S_4_13_in2")
    ,gs_ctrl0("gs_ctrl0")
    ,dut_Not_1U_1U_4_6_out1("dut_Not_1U_1U_4_6_out1")
    ,dut_And_1Ux1U_1U_4_11_out1("dut_And_1Ux1U_1U_4_11_out1")
    ,dut_Not_1U_1U_4_12_out1("dut_Not_1U_1U_4_12_out1")
    ,dout_m_req_m_trig_req("dout_m_req_m_trig_req")
    ,dut_LessThan_8Sx8S_1U_4_14_out1("dut_LessThan_8Sx8S_1U_4_14_out1")
    ,din_m_busy_req_0("din_m_busy_req_0")
    ,dut_Add_8Ux8U_9U_4_16_out1("dut_Add_8Ux8U_9U_4_16_out1")
    ,dut_Add_7Sx2S_8S_4_13_out1("dut_Add_7Sx2S_8S_4_13_out1")
    ,dout_data_slice("dout_data_slice")
    ,global_state("global_state")
    ,stall0("stall0")
    ,RAM_64x8_mem_1_1_WE0("RAM_64x8_mem_1_1_WE0")
    ,RAM_64x8_mem_1_1_DIN0("RAM_64x8_mem_1_1_DIN0")
    ,RAM_64x8_mem_1_1_DOUT0("RAM_64x8_mem_1_1_DOUT0")
    ,RAM_64x8_mem_1_1_A0("RAM_64x8_mem_1_1_A0")
{
  RAM_64x8_mem_1_1 = new RAM_64x8("RAM_64x8_mem_1_1");
  RAM_64x8_mem_1_1->CLK(clk);
  RAM_64x8_mem_1_1->WE0(RAM_64x8_mem_1_1_WE0);
  RAM_64x8_mem_1_1->DIN0(RAM_64x8_mem_1_1_DIN0);
  RAM_64x8_mem_1_1->DOUT0(RAM_64x8_mem_1_1_DOUT0);
  RAM_64x8_mem_1_1->A0(RAM_64x8_mem_1_1_A0);

  SC_METHOD(drive_dout_data);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_din_m_busy_req_0);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_dout_m_req_m_trig_req);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_stall0);
  sensitive << ( global_state );
  sensitive << ( dut_Not_1U_1U_4_6_out1 );
  sensitive << ( dut_And_1Ux1U_1U_4_11_out1 );

  SC_METHOD(drive_dut_Add_7Sx2S_8S_4_13_in2);
  sensitive << ( gs_ctrl0 );
  sensitive << ( dout_data_slice );

  SC_METHOD(dut_Add_7Sx2S_8S_4_13);
  sensitive << ( dut_Add_7Sx2S_8S_4_13_in2 );

  SC_METHOD(dut_LessThan_8Sx8S_1U_4_14);
  sensitive << ( dout_data_slice );

  SC_METHOD(drive_RAM_64x8_mem_1_1_A0);
  sensitive << ( gs_ctrl1 );
  sensitive << ( dout_data_slice );
  sensitive << ( dut_Add_6Ux1U_6U_4_15_out1 );

  SC_METHOD(drive_RAM_64x8_mem_1_1_WE0);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl3 );
  sensitive << ( dut_LessThan_8Sx8S_1U_4_14_out1 );

  SC_METHOD(dut_Add_6Ux1U_6U_4_15);
  sensitive << ( din_data );

  SC_METHOD(dut_Add_8Ux8U_9U_4_16);
  sensitive << ( dout_data_slice );
  sensitive << ( RAM_64x8_mem_1_1_DOUT0 );

  SC_METHOD(drive_global_state);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_global_state_next);
  sensitive << ( global_state );
  sensitive << ( dut_LessThan_8Sx8S_1U_4_14_out1 );

  SC_METHOD(drive_gs_ctrl0);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl1);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl3);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_din_busy);
  sensitive << ( dut_And_1Ux1U_1U_4_3_out1 );

  SC_METHOD(dut_Or_1Ux1U_1U_4_2);
  sensitive << ( din_vld );
  sensitive << ( din_m_unvalidated_req );

  SC_METHOD(dut_And_1Ux1U_1U_4_3);
  sensitive << ( din_m_busy_req_0 );
  sensitive << ( dut_Or_1Ux1U_1U_4_2_out1 );

  SC_METHOD(dut_Not_1U_1U_4_4);
  sensitive << ( dut_And_1Ux1U_1U_4_3_out1 );

  SC_METHOD(dut_And_1Ux1U_1U_4_5);
  sensitive << ( din_vld );
  sensitive << ( dut_Not_1U_1U_4_4_out1 );

  SC_METHOD(dut_Not_1U_1U_4_6);
  sensitive << ( dut_And_1Ux1U_1U_4_5_out1 );

  SC_METHOD(drive_din_m_unvalidated_req);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(dut_N_Muxb_1_2_0_4_1);
  sensitive << ( din_m_busy_req_0 );
  sensitive << ( din_m_unvalidated_req );
  sensitive << ( din_vld );

  SC_METHOD(drive_dout_vld);
  sensitive << ( dut_Or_1Ux1U_1U_4_10_out1 );

  SC_METHOD(dut_Or_1Ux1U_1U_4_10);
  sensitive << ( dut_Xor_1Ux1U_1U_4_9_out1 );
  sensitive << ( dout_m_unacked_req );

  SC_METHOD(drive_dout_m_unacked_req);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(dut_And_1Ux1U_1U_4_11);
  sensitive << ( dout_vld );
  sensitive << ( dout_busy );

  SC_METHOD(dut_Xor_1Ux1U_1U_4_9);
  sensitive << ( dout_m_req_m_prev_trig_req );
  sensitive << ( dout_m_req_m_trig_req );

  SC_METHOD(drive_dout_m_req_m_prev_trig_req);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(dut_Not_1U_1U_4_12);
  sensitive << ( dout_m_req_m_trig_req );

  SC_METHOD(thread_13);
  sensitive << ( dut_Add_7Sx2S_8S_4_13_in2 );

  SC_METHOD(thread_12);
  sensitive << ( dout_data_slice );

}
// resource: mux_10bx4i
// resource: regr_10b
void dut::drive_dout_data(){
  if ( stall0.read() );
  else {
    switch( (sc_uint<3>)(global_state.read()) ) {
    case 0ULL: case 1ULL: 
      dout_data_slice = (sc_int<10> ) (dut_Add_7Sx2S_8S_4_13_out1.read());
      break;
    case 2ULL: 
      dout_data_slice = (sc_int<10> )((sc_uint<6> )din_data.read());
      break;
    case 3ULL: 
      dout_data_slice = (sc_int<10> )RAM_64x8_mem_1_1_DOUT0.read();
      break;
    case 4ULL: 
      dout_data_slice = (sc_int<10> )dut_Add_8Ux8U_9U_4_16_out1.read();
      break;
    }
  }
}
// resource: mux_1bx2i
// resource: regr_1b
void dut::drive_din_m_busy_req_0(){
  if ( (rst.read() == 0ULL) ) {
    din_m_busy_req_0 = 1ULL;
  } else {
    if ( stall0.read() );
    else {
      switch( (sc_uint<3>)(global_state.read()) ) {
      case 1ULL: 
        if ( dut_LessThan_8Sx8S_1U_4_14_out1.read() );
        else {
          din_m_busy_req_0 = 0ULL;
        }
        break;
      case 2ULL: 
        din_m_busy_req_0 = 1ULL;
        break;
      case 5ULL: 
        din_m_busy_req_0 = 0ULL;
        break;
      }
    }
  }
}
// resource: regr_1b
void dut::drive_dout_m_req_m_trig_req(){
  if ( (rst.read() == 0ULL) ) {
    dout_m_req_m_trig_req = 0ULL;
  } else {
    if ( stall0.read() );
    else {
      switch( (sc_uint<3>)(global_state.read()) ) {
      case 4ULL: 
        dout_m_req_m_trig_req = (sc_uint<1> ) (dut_Not_1U_1U_4_12_out1.read());
        break;
      }
    }
  }
}
// resource: mux_1bx3i
void dut::drive_stall0(){
  switch( (sc_uint<3>)(global_state.read()) ) {
  default:
    stall0 = 0ULL;
    break;
  case 2ULL: 
    stall0 = dut_Not_1U_1U_4_6_out1.read();
    break;
  case 5ULL: 
    stall0 = dut_And_1Ux1U_1U_4_11_out1.read();
    break;
  }
}
// resource: mux_7bx2i
void dut::drive_dut_Add_7Sx2S_8S_4_13_in2(){
  if ( gs_ctrl0.read() ) {
    dut_Add_7Sx2S_8S_4_13_in2 = (sc_int<7> )dout_data_slice.read();
  } else {
    dut_Add_7Sx2S_8S_4_13_in2 = 0LL;
  }
}
// resource: dut_Add_7Sx2S_8S_4  instance: dut_Add_7Sx2S_8S_4_13
void dut::dut_Add_7Sx2S_8S_4_13(){
  dut_Add_7Sx2S_8S_4_13_out1 = (/*cliff*/sc_int<32>)(dut_Add_7Sx2S_8S_4_13_in2
                               .read() + 1LL);
}
// resource: dut_LessThan_8Sx8S_1U_4  instance: dut_LessThan_8Sx8S_1U_4_14
void dut::dut_LessThan_8Sx8S_1U_4_14(){
  dut_LessThan_8Sx8S_1U_4_14_out1 = (/*imp*/sc_uint<1>)((sc_int<8> )
                                    dout_data_slice.read() < (sc_int<8> )64LL);
}
// resource: mux_6bx3i
void dut::drive_RAM_64x8_mem_1_1_A0(){
  switch( (sc_uint<2>)(gs_ctrl1.read()) ) {
  default:
    RAM_64x8_mem_1_1_A0 = 0ULL;
    break;
  case 1ULL: 
    RAM_64x8_mem_1_1_A0 = (sc_uint<6> )dout_data_slice.read();
    break;
  case 2ULL: 
    RAM_64x8_mem_1_1_A0 = dut_Add_6Ux1U_6U_4_15_out1.read();
    break;
  }
}
// resource: mux_1bx2i
void dut::drive_RAM_64x8_mem_1_1_WE0(){
  if ( stall0.read() ) {
    RAM_64x8_mem_1_1_WE0 = 1ULL;
  } else {
    switch( (sc_uint<2>)(gs_ctrl3.read()) ) {
    default:
      RAM_64x8_mem_1_1_WE0 = 1ULL;
      break;
    case 1ULL: 
      RAM_64x8_mem_1_1_WE0 = 0ULL;
      break;
    case 2ULL: 
      if ( dut_LessThan_8Sx8S_1U_4_14_out1.read() ) {
        RAM_64x8_mem_1_1_WE0 = 0ULL;
      } else {
        RAM_64x8_mem_1_1_WE0 = 1ULL;
      }
      break;
    }
  }
}
// resource: dut_Add_6Ux1U_6U_4  instance: dut_Add_6Ux1U_6U_4_15
void dut::dut_Add_6Ux1U_6U_4_15(){
  dut_Add_6Ux1U_6U_4_15_out1 = ((sc_uint<6> )din_data.read() + 1ULL);
}
// resource: dut_Add_8Ux8U_9U_4  instance: dut_Add_8Ux8U_9U_4_16
void dut::dut_Add_8Ux8U_9U_4_16(){
  dut_Add_8Ux8U_9U_4_16_out1 = (RAM_64x8_mem_1_1_DOUT0.read() + (sc_uint<8> )
                               dout_data_slice.read());
}
// resource: regr_3b
void dut::drive_global_state(){
  if ( (rst.read() == 0ULL) ) {
    global_state = 0ULL;
  } else {
    if ( stall0.read() );
    else {
      global_state = global_state_next.read();
    }
  }
}
// resource: mux_3bx3i
void dut::drive_global_state_next(){
  switch( (sc_uint<3>)(global_state.read()) ) {
  default:
    global_state_next = (global_state.read() + 1ULL);
    break;
  case 1ULL: 
    if ( dut_LessThan_8Sx8S_1U_4_14_out1.read() ) {
      global_state_next = 1ULL;
    } else {
      global_state_next = (global_state.read() + 1ULL);
    }
    break;
  case 5ULL: 
    global_state_next = 2ULL;
    break;
  }
}
// resource: mux_1bx2i
// resource: regr_1b
void dut::drive_gs_ctrl0(){
  if ( (rst.read() == 0ULL) ) {
    gs_ctrl0 = 0ULL;
  } else {
    if ( stall0.read() );
    else {
      switch( (sc_uint<3>)(global_state_next.read()) ) {
      default:
        gs_ctrl0 = 0ULL;
        break;
      case 1ULL: 
        gs_ctrl0 = 1ULL;
        break;
      }
    }
  }
}
// resource: mux_2bx3i
// resource: regr_2b
void dut::drive_gs_ctrl1(){
  if ( (rst.read() == 0ULL) ) {
    gs_ctrl1 = 0ULL;
  } else {
    if ( stall0.read() );
    else {
      switch( (sc_uint<3>)(global_state_next.read()) ) {
      default:
        gs_ctrl1 = 0ULL;
        break;
      case 1ULL: case 3ULL: 
        gs_ctrl1 = 1ULL;
        break;
      case 2ULL: 
        gs_ctrl1 = 2ULL;
        break;
      }
    }
  }
}
// resource: mux_2bx3i
// resource: regr_2b
void dut::drive_gs_ctrl3(){
  if ( (rst.read() == 0ULL) ) {
    gs_ctrl3 = 1ULL;
  } else {
    if ( stall0.read() );
    else {
      switch( (sc_uint<3>)(global_state_next.read()) ) {
      default:
        gs_ctrl3 = 0ULL;
        break;
      case 0ULL: 
        gs_ctrl3 = 1ULL;
        break;
      case 1ULL: 
        gs_ctrl3 = 2ULL;
        break;
      }
    }
  }
}
void dut::drive_din_busy(){
  din_busy = (sc_uint<1> ) (dut_And_1Ux1U_1U_4_3_out1.read());
}
// resource: dut_Or_1Ux1U_1U_4  instance: dut_Or_1Ux1U_1U_4_2
void dut::dut_Or_1Ux1U_1U_4_2(){
  dut_Or_1Ux1U_1U_4_2_out1 = din_m_unvalidated_req.read() | din_vld.read();
}
// resource: dut_And_1Ux1U_1U_4  instance: dut_And_1Ux1U_1U_4_3
void dut::dut_And_1Ux1U_1U_4_3(){
  dut_And_1Ux1U_1U_4_3_out1 = (sc_uint<1> ) (dut_Or_1Ux1U_1U_4_2_out1.read() & (
                              sc_uint<1> )din_m_busy_req_0.read());
}
// resource: dut_Not_1U_1U_4  instance: dut_Not_1U_1U_4_4
void dut::dut_Not_1U_1U_4_4(){
  dut_Not_1U_1U_4_4_out1 = !dut_And_1Ux1U_1U_4_3_out1.read();
}
// resource: dut_And_1Ux1U_1U_4  instance: dut_And_1Ux1U_1U_4_5
void dut::dut_And_1Ux1U_1U_4_5(){
  dut_And_1Ux1U_1U_4_5_out1 = (sc_uint<1> ) (dut_Not_1U_1U_4_4_out1.read() & (
                              sc_uint<1> )din_vld.read());
}
// resource: dut_Not_1U_1U_4  instance: dut_Not_1U_1U_4_6
void dut::dut_Not_1U_1U_4_6(){
  dut_Not_1U_1U_4_6_out1 = !dut_And_1Ux1U_1U_4_5_out1.read();
}
// resource: regr_1b
void dut::drive_din_m_unvalidated_req(){
  if ( (rst.read() == 0ULL) ) {
    din_m_unvalidated_req = 1ULL;
  } else {
    din_m_unvalidated_req = (sc_uint<1> ) (dut_N_Muxb_1_2_0_4_1_out1.read());
  }
}
// resource: dut_N_Muxb_1_2_0_4
void dut::dut_N_Muxb_1_2_0_4_1(){
  if ( din_m_busy_req_0.read() ) {
    dut_N_Muxb_1_2_0_4_1_out1 = (sc_uint<1> ) (din_m_unvalidated_req.read());
  } else {
    dut_N_Muxb_1_2_0_4_1_out1 = (sc_uint<1> ) (din_vld.read());
  }
}
void dut::drive_dout_vld(){
  dout_vld = (sc_uint<1> ) (dut_Or_1Ux1U_1U_4_10_out1.read());
}
// resource: dut_Or_1Ux1U_1U_4  instance: dut_Or_1Ux1U_1U_4_10
void dut::dut_Or_1Ux1U_1U_4_10(){
  dut_Or_1Ux1U_1U_4_10_out1 = dout_m_unacked_req.read() | (sc_uint<1>)
                              dut_Xor_1Ux1U_1U_4_9_out1.read();
}
// resource: regr_1b
void dut::drive_dout_m_unacked_req(){
  if ( (rst.read() == 0ULL) ) {
    dout_m_unacked_req = 0ULL;
  } else {
    dout_m_unacked_req = (sc_uint<1> ) (dut_And_1Ux1U_1U_4_11_out1.read());
  }
}
// resource: dut_And_1Ux1U_1U_4  instance: dut_And_1Ux1U_1U_4_11
void dut::dut_And_1Ux1U_1U_4_11(){
  dut_And_1Ux1U_1U_4_11_out1 = (sc_uint<1> ) (dout_busy.read() & dout_vld.read()
                               );
}
// resource: dut_Xor_1Ux1U_1U_4  instance: dut_Xor_1Ux1U_1U_4_9
void dut::dut_Xor_1Ux1U_1U_4_9(){
  dut_Xor_1Ux1U_1U_4_9_out1 = (sc_uint<1> ) (dout_m_req_m_trig_req.read() ^ 
                              dout_m_req_m_prev_trig_req.read());
}
// resource: regr_1b
void dut::drive_dout_m_req_m_prev_trig_req(){
  if ( (rst.read() == 0ULL) ) {
    dout_m_req_m_prev_trig_req = 0ULL;
  } else {
    dout_m_req_m_prev_trig_req = dout_m_req_m_trig_req.read();
  }
}
// resource: dut_Not_1U_1U_4  instance: dut_Not_1U_1U_4_12
void dut::dut_Not_1U_1U_4_12(){
  dut_Not_1U_1U_4_12_out1 = !dout_m_req_m_trig_req.read();
}
void dut::thread_13(){
  RAM_64x8_mem_1_1_DIN0 = (sc_uint<8> ) (dut_Add_7Sx2S_8S_4_13_in2.read());
}
void dut::thread_12(){
  dout_data = (sc_uint<11> ) (dout_data_slice.read());
}
